package com.reportportal.ui;

import com.reportportal.tests.utils.ConfigLoader;
import io.qameta.allure.Epic;
import io.qameta.allure.Feature;
import io.qameta.allure.Story;
import io.restassured.RestAssured;
import io.restassured.http.ContentType;
import io.restassured.response.Response;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;

import static io.restassured.RestAssured.given;
import static org.hamcrest.Matchers.*;

/**
 * API —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–∑–¥–∞–Ω–∏—è –¥–∞—à–±–æ—Ä–¥–∞ –≤ Report Portal.
 *
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è:
 * - RestAssured –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤;
 * - Allure –∞–Ω–Ω–æ—Ç–∞—Ü–∏–∏ –¥–ª—è –æ—Ç—á—ë—Ç–Ω–æ—Å—Ç–∏;
 * - JUnit 5 –¥–ª—è –Ω–∞–ø–∏—Å–∞–Ω–∏—è —Ç–µ—Å—Ç–∞.
 */
@Epic("Report Portal API Tests")        // –ì–ª–æ–±–∞–ª—å–Ω—ã–π —Ä–∞–∑–¥–µ–ª –≤ Allure
@Feature("Dashboard Management")        // –§–∏—á–∞ ‚Äî —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞—à–±–æ—Ä–¥–∞–º–∏
public class DashboardAPITest {

    // –ë–∞–∑–æ–≤—ã–π URL API
    private static final String BASE_URL = ConfigLoader.getProperty("api.base.url");


    // üîë API —Ç–æ–∫–µ–Ω, –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è –ø—Ä–æ–µ–∫—Ç–∞ (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–º!)
    private static final String API_TOKEN = ConfigLoader.getProperty("api.token");

    // –ò–º—è –ø—Ä–æ–µ–∫—Ç–∞, –≤ –∫–æ—Ç–æ—Ä–æ–º —Å–æ–∑–¥–∞—ë—Ç—Å—è Dashboard
    private static final String PROJECT_NAME = ConfigLoader.getProperty("project.name");

    /**
     * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –±–∞–∑–æ–≤—ã–π URL –¥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤.
     */
    @BeforeAll
    public static void setup() {
        RestAssured.baseURI = BASE_URL;
    }

    /**
     * –¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–æ–∑–¥–∞—Ç—å –¥–∞—à–±–æ—Ä–¥ —á–µ—Ä–µ–∑ API,
     * –∞ –∑–∞—Ç–µ–º —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –æ–Ω –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Å–ø–∏—Å–∫–µ –¥–∞—à–±–æ—Ä–¥–æ–≤.
     */
    @Test
    @Story("Create New Dashboard")                      // –ò—Å—Ç–æ—Ä–∏—è –≤ Allure –æ—Ç—á–µ—Ç–µ
    @DisplayName("Create new dashboard with valid data") // –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ—Å—Ç–∞ –≤ Allure
    void testCreateDashboard() {
        // –£–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è –¥–∞—à–±–æ—Ä–¥–∞
        String dashboardName = "TestDashboard_" + System.currentTimeMillis();

        // –¢–µ–ª–æ POST-–∑–∞–ø—Ä–æ—Å–∞
        String requestBody = String.format("""
        {
            "description": "API Test Dashboard",
            "name": "%s"
        }
        """, dashboardName);

        // === –®–∞–≥ 1: –°–æ–∑–¥–∞–Ω–∏–µ Dashboard —á–µ—Ä–µ–∑ POST ===
        Response response = given()
                .auth().oauth2(API_TOKEN)                          // –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ Bearer —Ç–æ–∫–µ–Ω
                .contentType(ContentType.JSON)
                .accept(ContentType.JSON)
                .pathParam("projectName", PROJECT_NAME)
                .body(requestBody)
                .when()
                .post("/{projectName}/dashboard")                 // Endpoint: /v1/{projectName}/dashboard
                .then()
                .log().status()                                   // –õ–æ–≥ —Å—Ç–∞—Ç—É—Å–∞ –æ—Ç–≤–µ—Ç–∞
                .log().body()                                     // –õ–æ–≥ —Ç–µ–ª–∞ –æ—Ç–≤–µ—Ç–∞
                .statusCode(201)                                  // –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –¥–∞—à–±–æ—Ä–¥ —Å–æ–∑–¥–∞–Ω
                .body("id", notNullValue())                       // –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –≤–µ—Ä–Ω—É–ª—Å—è ID
                .extract().response();

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –Ω–æ–≤–æ–≥–æ –¥–∞—à–±–æ—Ä–¥–∞ (–Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, –Ω–æ –ø–æ–ª–µ–∑–Ω–æ)
        int dashboardId = response.path("id");
        System.out.println("‚úÖ Created dashboard ID: " + dashboardId);

        // === –®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –¥–∞—à–±–æ—Ä–¥ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Å–ø–∏—Å–∫–µ (GET) ===
        given()
                .auth().oauth2(API_TOKEN)
                .pathParam("projectName", PROJECT_NAME)
                .when()
                .get("/{projectName}/dashboard")                  // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–∞—à–±–æ—Ä–¥–æ–≤
                .then()
                .log().status()
                .statusCode(200)
                .body("content.name", hasItem(dashboardName));    // –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –Ω–∞—à –¥–∞—à–±–æ—Ä–¥ –µ—Å—Ç—å –≤ —Å–ø–∏—Å–∫–µ
    }
}
